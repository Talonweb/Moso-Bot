const punch = require('./gifs/punch.json')
const nervous = require('./gifs/nervous.json')
const wolf = require('./gifs/wolf.json')
const cat = require('./gifs/cat.json')
const dog = require('./gifs/dog.json')
const run = require('./gifs/run.json')
const hi = require('./gifs/hi.json')
const slap = require('./gifs/slap.json')
const happy = require('./gifs/happy.json')
const kiss = require('./gifs/kiss.json')
const hug = require('./gifs/hug.json')
module.exports = {
    hug: function(){
        let array = hug.array
        return array[Math.floor(Math.random() * array.length)];
    },
    kiss: function(){
        let kissarray = kiss.array
        return kissarray[Math.floor(Math.random() * kissarray.length)];
    },
    slap: function(){
        let slaparray = slap.array
        return slaparray[Math.floor(Math.random() * slaparray.length)];
    },
    pat: function(){
        let patArray = pat.array
        return patArray[Math.floor(Math.random() * patArray.length)];
    },
    happy: function() {
        let happyArray = happy.array
        return happyArray[Math.floor(Math.random() * happyArray.length)];
    },
    hi: function(){
        let hiArray = hi.array
        return hiArray[Math.floor(Math.random() * hiArray.length)]
    },
    run: function(){
        let runArray = run.array
        return runArray[Math.floor(Math.random() * runArray.length)]
    },
    dog: function(){
        let dogArray = dog.array
        return dogArray[Math.floor(Math.random() * dogArray.length)]
    },
    cat: function(){
        let catArray = cat.array
        return catArray[Math.floor(Math.random() * catArray.length)];
    },
    wolf: function (){
        let wolfArray = wolf.array
        return wolfArray[Math.floor(Math.random() * wolfArray.length)];
    },
    nervous: function(){
        let nervousArray = nervous.array
        return nervousArray[Math.floor(Math.random() * nervousArray.length)];
    },
    punch: function() {
        let punchArray = punch.array
        return punchArray[Math.floor(Math.random() * punchArray.length)]
    }
}